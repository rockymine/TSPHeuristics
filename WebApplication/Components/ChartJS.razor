@inject IJSRuntime JSRuntime
@using ChartData
@using TravellingSalesmanProblem.Graph
<canvas id="@ChartID" style="width:100%;max-width:1400px"></canvas>

@code {
	[Parameter]
	public ChartInfo Chart { get; set; }
	[Parameter]
	public string ChartID { get; set; }

	private Task<IJSObjectReference> _module;
    private Task<IJSObjectReference> Module => _module
		??= JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/ChartJSInterop.js").AsTask();

	protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (firstRender) {
			var module = await Module;
			await module.InvokeVoidAsync("LineChart", ChartID, Chart);
        }

        await base.OnAfterRenderAsync(firstRender);
    }

	public async Task UpdateFromGraphState() {
		var module = await Module;
		await module.InvokeVoidAsync("LineChart", ChartID, Chart);
		StateHasChanged();
	}
}